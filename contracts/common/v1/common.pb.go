// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: common/v1/common.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Source schema of the incoming payload after detection.
type Schema int32

const (
	Schema_SCHEMA_UNSPECIFIED Schema = 0
	Schema_SCHEMA_JSON        Schema = 1
	Schema_SCHEMA_LOGFMT      Schema = 2
	Schema_SCHEMA_TEXT        Schema = 3
)

// Enum value maps for Schema.
var (
	Schema_name = map[int32]string{
		0: "SCHEMA_UNSPECIFIED",
		1: "SCHEMA_JSON",
		2: "SCHEMA_LOGFMT",
		3: "SCHEMA_TEXT",
	}
	Schema_value = map[string]int32{
		"SCHEMA_UNSPECIFIED": 0,
		"SCHEMA_JSON":        1,
		"SCHEMA_LOGFMT":      2,
		"SCHEMA_TEXT":        3,
	}
)

func (x Schema) Enum() *Schema {
	p := new(Schema)
	*p = x
	return p
}

func (x Schema) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schema) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[0].Descriptor()
}

func (Schema) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[0]
}

func (x Schema) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Schema.Descriptor instead.
func (Schema) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{0}
}

// Normalized severity. Keep mapping small; do not mirror every library level.
type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_DEBUG       Severity = 1
	Severity_SEVERITY_INFO        Severity = 2
	Severity_SEVERITY_WARN        Severity = 3
	Severity_SEVERITY_ERROR       Severity = 4
	Severity_SEVERITY_FATAL       Severity = 5
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_DEBUG",
		2: "SEVERITY_INFO",
		3: "SEVERITY_WARN",
		4: "SEVERITY_ERROR",
		5: "SEVERITY_FATAL",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_DEBUG":       1,
		"SEVERITY_INFO":        2,
		"SEVERITY_WARN":        3,
		"SEVERITY_ERROR":       4,
		"SEVERITY_FATAL":       5,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[1].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[1]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{1}
}

// Sampler decision: keep or suppress.
type Action int32

const (
	Action_ACTION_UNSPECIFIED Action = 0
	Action_ACTION_KEEP        Action = 1
	Action_ACTION_SUPPRESS    Action = 2
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_KEEP",
		2: "ACTION_SUPPRESS",
	}
	Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_KEEP":        1,
		"ACTION_SUPPRESS":    2,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[2].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[2]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{2}
}

// Reason ladder for why a line was kept (first-match-wins policy).
type KeepReason int32

const (
	KeepReason_KEEP_REASON_UNSPECIFIED KeepReason = 0
	KeepReason_KEEP_REASON_SEVERITY    KeepReason = 1 // error/fatal floor
	KeepReason_KEEP_REASON_NOVEL       KeepReason = 2 // new template within novelty window
	KeepReason_KEEP_REASON_SPIKE       KeepReason = 3 // spike-aware relaxation
	KeepReason_KEEP_REASON_WARMUP      KeepReason = 4 // first N
	KeepReason_KEEP_REASON_LOG2        KeepReason = 5 // 1,2,4,8,16...
	KeepReason_KEEP_REASON_STEADYK     KeepReason = 6 // every Kth
	KeepReason_KEEP_REASON_BUDGET      KeepReason = 7 // budget guard adjustment
)

// Enum value maps for KeepReason.
var (
	KeepReason_name = map[int32]string{
		0: "KEEP_REASON_UNSPECIFIED",
		1: "KEEP_REASON_SEVERITY",
		2: "KEEP_REASON_NOVEL",
		3: "KEEP_REASON_SPIKE",
		4: "KEEP_REASON_WARMUP",
		5: "KEEP_REASON_LOG2",
		6: "KEEP_REASON_STEADYK",
		7: "KEEP_REASON_BUDGET",
	}
	KeepReason_value = map[string]int32{
		"KEEP_REASON_UNSPECIFIED": 0,
		"KEEP_REASON_SEVERITY":    1,
		"KEEP_REASON_NOVEL":       2,
		"KEEP_REASON_SPIKE":       3,
		"KEEP_REASON_WARMUP":      4,
		"KEEP_REASON_LOG2":        5,
		"KEEP_REASON_STEADYK":     6,
		"KEEP_REASON_BUDGET":      7,
	}
)

func (x KeepReason) Enum() *KeepReason {
	p := new(KeepReason)
	*p = x
	return p
}

func (x KeepReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeepReason) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[3].Descriptor()
}

func (KeepReason) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[3]
}

func (x KeepReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeepReason.Descriptor instead.
func (KeepReason) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{3}
}

// Template event type for the index-feed.
type TemplateEventType int32

const (
	TemplateEventType_TEMPLATE_EVENT_TYPE_UNSPECIFIED TemplateEventType = 0
	TemplateEventType_TEMPLATE_NEW                    TemplateEventType = 1
	TemplateEventType_TEMPLATE_UPDATE                 TemplateEventType = 2
	TemplateEventType_TEMPLATE_SPIKE                  TemplateEventType = 3
)

// Enum value maps for TemplateEventType.
var (
	TemplateEventType_name = map[int32]string{
		0: "TEMPLATE_EVENT_TYPE_UNSPECIFIED",
		1: "TEMPLATE_NEW",
		2: "TEMPLATE_UPDATE",
		3: "TEMPLATE_SPIKE",
	}
	TemplateEventType_value = map[string]int32{
		"TEMPLATE_EVENT_TYPE_UNSPECIFIED": 0,
		"TEMPLATE_NEW":                    1,
		"TEMPLATE_UPDATE":                 2,
		"TEMPLATE_SPIKE":                  3,
	}
)

func (x TemplateEventType) Enum() *TemplateEventType {
	p := new(TemplateEventType)
	*p = x
	return p
}

func (x TemplateEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[4].Descriptor()
}

func (TemplateEventType) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[4]
}

func (x TemplateEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateEventType.Descriptor instead.
func (TemplateEventType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{4}
}

// Small helper for bounded exemplars.
type Exemplar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`     // masked/redacted exemplar text
	Pod           string                 `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`             // optional
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // optional
	Node          string                 `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`           // optional
	Stream        string                 `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`       // optional (stdout/stderr)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exemplar) Reset() {
	*x = Exemplar{}
	mi := &file_common_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exemplar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exemplar) ProtoMessage() {}

func (x *Exemplar) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exemplar.ProtoReflect.Descriptor instead.
func (*Exemplar) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *Exemplar) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Exemplar) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *Exemplar) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Exemplar) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *Exemplar) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

// Generic time windows counters used in several APIs.
type WindowCounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count_10M     uint64                 `protobuf:"varint,1,opt,name=count_10m,json=count10m,proto3" json:"count_10m,omitempty"`
	Count_1H      uint64                 `protobuf:"varint,2,opt,name=count_1h,json=count1h,proto3" json:"count_1h,omitempty"`
	Count_24H     uint64                 `protobuf:"varint,3,opt,name=count_24h,json=count24h,proto3" json:"count_24h,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WindowCounts) Reset() {
	*x = WindowCounts{}
	mi := &file_common_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WindowCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowCounts) ProtoMessage() {}

func (x *WindowCounts) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowCounts.ProtoReflect.Descriptor instead.
func (*WindowCounts) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *WindowCounts) GetCount_10M() uint64 {
	if x != nil {
		return x.Count_10M
	}
	return 0
}

func (x *WindowCounts) GetCount_1H() uint64 {
	if x != nil {
		return x.Count_1H
	}
	return 0
}

func (x *WindowCounts) GetCount_24H() uint64 {
	if x != nil {
		return x.Count_24H
	}
	return 0
}

var File_common_v1_common_proto protoreflect.FileDescriptor

const file_common_v1_common_proto_rawDesc = "" +
	"\n" +
	"\x16common/v1/common.proto\x12\tcommon.v1\"\x80\x01\n" +
	"\bExemplar\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x10\n" +
	"\x03pod\x18\x02 \x01(\tR\x03pod\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04node\x18\x04 \x01(\tR\x04node\x12\x16\n" +
	"\x06stream\x18\x05 \x01(\tR\x06stream\"c\n" +
	"\fWindowCounts\x12\x1b\n" +
	"\tcount_10m\x18\x01 \x01(\x04R\bcount10m\x12\x19\n" +
	"\bcount_1h\x18\x02 \x01(\x04R\acount1h\x12\x1b\n" +
	"\tcount_24h\x18\x03 \x01(\x04R\bcount24h*U\n" +
	"\x06Schema\x12\x16\n" +
	"\x12SCHEMA_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vSCHEMA_JSON\x10\x01\x12\x11\n" +
	"\rSCHEMA_LOGFMT\x10\x02\x12\x0f\n" +
	"\vSCHEMA_TEXT\x10\x03*\x86\x01\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSEVERITY_DEBUG\x10\x01\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x02\x12\x11\n" +
	"\rSEVERITY_WARN\x10\x03\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x04\x12\x12\n" +
	"\x0eSEVERITY_FATAL\x10\x05*F\n" +
	"\x06Action\x12\x16\n" +
	"\x12ACTION_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vACTION_KEEP\x10\x01\x12\x13\n" +
	"\x0fACTION_SUPPRESS\x10\x02*\xd0\x01\n" +
	"\n" +
	"KeepReason\x12\x1b\n" +
	"\x17KEEP_REASON_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14KEEP_REASON_SEVERITY\x10\x01\x12\x15\n" +
	"\x11KEEP_REASON_NOVEL\x10\x02\x12\x15\n" +
	"\x11KEEP_REASON_SPIKE\x10\x03\x12\x16\n" +
	"\x12KEEP_REASON_WARMUP\x10\x04\x12\x14\n" +
	"\x10KEEP_REASON_LOG2\x10\x05\x12\x17\n" +
	"\x13KEEP_REASON_STEADYK\x10\x06\x12\x16\n" +
	"\x12KEEP_REASON_BUDGET\x10\a*s\n" +
	"\x11TemplateEventType\x12#\n" +
	"\x1fTEMPLATE_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fTEMPLATE_NEW\x10\x01\x12\x13\n" +
	"\x0fTEMPLATE_UPDATE\x10\x02\x12\x12\n" +
	"\x0eTEMPLATE_SPIKE\x10\x03BBZ@github.com/kumarabd/ingestion-plane/contracts/common/v1;commonv1b\x06proto3"

var (
	file_common_v1_common_proto_rawDescOnce sync.Once
	file_common_v1_common_proto_rawDescData []byte
)

func file_common_v1_common_proto_rawDescGZIP() []byte {
	file_common_v1_common_proto_rawDescOnce.Do(func() {
		file_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_common_proto_rawDesc), len(file_common_v1_common_proto_rawDesc)))
	})
	return file_common_v1_common_proto_rawDescData
}

var file_common_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_v1_common_proto_goTypes = []any{
	(Schema)(0),            // 0: common.v1.Schema
	(Severity)(0),          // 1: common.v1.Severity
	(Action)(0),            // 2: common.v1.Action
	(KeepReason)(0),        // 3: common.v1.KeepReason
	(TemplateEventType)(0), // 4: common.v1.TemplateEventType
	(*Exemplar)(nil),       // 5: common.v1.Exemplar
	(*WindowCounts)(nil),   // 6: common.v1.WindowCounts
}
var file_common_v1_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_common_proto_init() }
func file_common_v1_common_proto_init() {
	if File_common_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_common_proto_rawDesc), len(file_common_v1_common_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_common_proto_goTypes,
		DependencyIndexes: file_common_v1_common_proto_depIdxs,
		EnumInfos:         file_common_v1_common_proto_enumTypes,
		MessageInfos:      file_common_v1_common_proto_msgTypes,
	}.Build()
	File_common_v1_common_proto = out.File
	file_common_v1_common_proto_goTypes = nil
	file_common_v1_common_proto_depIdxs = nil
}
